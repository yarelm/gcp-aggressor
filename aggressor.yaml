main:
    params: [input]
    steps:
    - get_message:
        call: http.get
        args:
            url: https://dns.google/resolve
            query:
                name: ${input.hostname}
                type: "A"
        result: dns_response
    - define:
        assign:
        - result: ""
        - answers: ${json.decode(dns_response.body).Answer}
        - i: 0
    - check_condition:
        switch:
            - condition: ${len(answers) > i}
              next: iterate
        next: define_url 
    - iterate:
        switch:
            - condition: ${answers[i].type == 1}
              next: assign_result
        next: just_iterate
    - just_iterate:
        assign:
            - i: ${i+1}
        next: check_condition
    - assign_result:
        assign:
            - result: ${result + answers[i].data + ","}
        next: just_iterate
    - define_url:
        assign:
              - result_len: ${len(result)}
              - result_strip: ${text.substring(result, 0, result_len-1)}
              - result_split: ${text.split(result_strip, ",")}
              - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
        next: edit_firewall_rule
    - edit_firewall_rule:
        call: http.patch
        args:
            url: ${"https://compute.googleapis.com/compute/v1/projects/" + project_id + "/global/firewalls/" + input.ruleName}
            auth:
                type: OAuth2
            body:
                destinationRanges: ${result_split}
    - return_value:
        return: ${"Changed firewall rule " + input.ruleName + " destinations as of DNS results for " + input.hostname + " is " + result_strip}
